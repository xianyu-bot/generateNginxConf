user nginx;
worker_processes auto;
daemon off;
error_log logs/error.log;
pid /usr/local/nginx/nginx.pid;
events {
    worker_connections 65535;
}
worker_rlimit_nofile 65535;

http {
    include mime.types;
    default_type application/octet-stream;
    client_max_body_size 0;
    #charset utf-8;
    vhost_traffic_status_zone;
    log_format main '$time_local  $remote_addr  $request_method '
     '$request_uri  $uri  $request_time '
     '$status  $body_bytes_sent '
     '$geoip2_data_country_name  $geoip2_data_subdivisions_name  $geoip2_data_city_name '
     '$http_referer  $upstream_addr  $upstream_response_time '
     '$http_user_agent  $http_x_forwarded_for  $content_length';

    access_log logs/access.log main;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    gzip on;
    server_tokens off;

    geoip2 /usr/local/nginx/conf/GeoLite2-Country.mmdb {
        $geoip2_data_country_code default=CN country iso_code;
        $geoip2_data_country_name default=CountryPrivate country names en;
    }

    geoip2 /usr/local/nginx/conf/GeoLite2-City.mmdb {
        $geoip2_data_city_name default=CityPrivate city names en;
        $geoip2_data_subdivisions_name default=ProvincePrivate subdivisions 0 names en;
    }
    upstream jcxmjd {
        server 192.168.104.213:8084;
    }
    upstream jclhys {
        server 192.168.104.238:8080;
        server 192.168.104.239:8080;
        server 192.168.104.213:8084;
    }
    upstream SmartSiteAPI {
        server 10.1.126.21:8080;
    }
    upstream site-brain {
        server 10.1.126.21:8081;
    }
    upstream smart-site {
        server 10.1.126.21:8082;
    }
    upstream IOTWebService {
        server 10.1.126.22:8080;
    }
    upstream IOTWebServiceListener {
        server 10.1.126.22:8080;
    }
    server {
        listen 80;
        server_name localhost;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 75s;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        location / {
            root html;
            index index.html index.htm;
        }

        location ~ ^(.*)\/\.svn\/ {
            return 404;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }


        location /appurl {
            proxy_pass http://epointjweb;
            ##############添加对websocket的配置支持
            #proxy_http_version 1.1;
            #proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Connection "upgrade";
        }

        location /epoint_base_status {
            auth_basic "epointsafe";
            auth_basic_user_file /usr/local/nginx/conf/htpasswd;
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
        }
        location IOTWebServiceListener {
            proxy_pass http://IOTWebServiceListener;
        }
        location IOTWebService {
            proxy_pass http://IOTWebService;
        }
        location smart-site {
            proxy_pass http://smart-site;
        }
        location site-brain {
            proxy_pass http://site-brain;
        }
        location SmartSiteAPI {
            proxy_pass http://SmartSiteAPI;
        }
        location jclhys {
            proxy_pass http://jclhys;
        }
        location jcxmjd {
            proxy_pass http://jcxmjd;
        }

        #location ~ /\.ht {
        #    deny  all;
        #}
    }

}
